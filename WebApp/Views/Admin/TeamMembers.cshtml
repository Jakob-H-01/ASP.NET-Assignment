@model TeamMembersViewModel
@inject IMemberService memberService

@{
    ViewData["Title"] = "Team Members";
}

<header class="flex-sb">
    <h1 class="secondary-heading">@ViewData["Title"]</h1>
    <button class="btn btn-blue btn-add" data-type="modal" data-target="#create-member"><i class="fa-solid fa-plus"></i><span>Add Member</span></button>
</header>
<section class="card-grid small-cols px-large">
    @foreach(var member in Model.Members)
    {
        @await Html.PartialAsync("Partials/Components/_MemberCard", member)
    }
</section>
@await Html.PartialAsync("Partials/Components/_AddMemberModal", Model.AddMember)
@await Html.PartialAsync("Partials/Components/_EditMemberModal", Model.EditMember)

<script>
    window.showAddModal = @(Model.ShowAddModal.ToString().ToLower())
    window.showEditModal = @(Model.ShowEditModal.ToString().ToLower())

    if (window.location.pathname !== '/admin/members') {
        window.history.replaceState({}, '', '/admin/members');
    }
</script>

<partial name="_ValidationScripts">