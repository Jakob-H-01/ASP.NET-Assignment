@model ProjectsViewModel

@{
	ViewData["Title"] = "Projects";
}

<header class="flex-sb">
    <h1 class="secondary-heading">@ViewData["Title"]</h1>
    <button class="btn btn-blue btn-add" data-type="modal" data-target="#create-project"><i class="fa-solid fa-plus"></i><span>Add Project</span></button>
</header>
<nav>
    <ul class="tab-links">
        <li><a class="tab-link active" href="#">ALL [8]</a></li>
        <li><a class="tab-link" href="#">STARTED [8]</a></li>
        <li><a class="tab-link" href="#">COMPLETED [0]</a></li>
    </ul>
</nav>
<section class="card-grid">
    @foreach (var project in Model.Projects)
    {
        @await Html.PartialAsync("Partials/Components/_ProjectCard", project)
    }
</section>
@await Html.PartialAsync("Partials/Components/_AddProjectModal", Model.AddProject)
@await Html.PartialAsync("Partials/Components/_EditProjectModal", Model.EditProject)

<script>
    window.showAddModal = @(Model.ShowAddModal.ToString().ToLower())
    window.showEditModal = @(Model.ShowEditModal.ToString().ToLower())

    if (window.location.pathname !== '/projects') {
        window.history.replaceState({}, '', '/projects');
    }
</script>

<partial name="_ValidationScripts">